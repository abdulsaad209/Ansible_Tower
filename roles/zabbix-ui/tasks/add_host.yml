# ==========================================================
# Create or Update Host in Zabbix 7.4 via JSON-RPC API
# ==========================================================

- name: Get API token
  uri:
    url: "{{ zabbix_url }}/api_jsonrpc.php"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "user.login"
      params:
        username: "{{ zabbix_user }}"
        password: "{{ zabbix_pass }}"
      id: 1
    headers:
      Content-Type: "application/json-rpc"
    validate_certs: false
  register: login_response

- set_fact:
    zbx_token: "{{ login_response.json.result }}"

- debug:
    msg: "Authenticated successfully with token {{ zbx_token }}"

# ---------------------------------------------------------
# Resolve all group IDs
- name: Get group IDs from Zabbix
  uri:
    url: "{{ zabbix_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zbx_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "hostgroup.get"
      params:
        filter:
          name: "{{ zabbix_groups }}"
        output: ["groupid", "name"]
      id: 2
    validate_certs: false
  register: group_response

- set_fact:
    group_ids: "{{ group_response.json.result | map(attribute='groupid') | list }}"

- debug:
    msg: "Resolved group IDs: {{ group_ids }} for groups {{ zabbix_groups }}"

# ---------------------------------------------------------
# Resolve all template IDs
- name: Get template IDs from Zabbix
  uri:
    url: "{{ zabbix_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zbx_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "template.get"
      params:
        filter:
          host: "{{ zabbix_templates }}"
        output: ["templateid", "host"]
      id: 3
    validate_certs: false
  register: template_response

- set_fact:
    template_ids: "{{ template_response.json.result | map(attribute='templateid') | list }}"

- debug:
    msg: "Resolved template IDs: {{ template_ids }} for templates {{ zabbix_templates }}"

# ---------------------------------------------------------
# Check if host already exists
- name: Check if host already exists in Zabbix
  uri:
    url: "{{ zabbix_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zbx_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "host.get"
      params:
        filter:
          host: "{{ host_name }}"
        output: ["hostid", "host"]
      id: 5
    validate_certs: false
  register: host_check

- set_fact:
    existing_host_id: "{{ host_check.json.result[0].hostid | default('') }}"

- debug:
    msg: "Existing host ID (if any): {{ existing_host_id }}"

# ---------------------------------------------------------
# Convert macro dictionary to Zabbix format
- name: Convert macro dictionary to Zabbix format
  set_fact:
    zabbix_macro_list: "{{ zabbix_macros | dict2items | map('community.general.dict_kv', 'macro', 'value') | list }}"

# ---------------------------------------------------------
# Create or Update Host
- name: Create new host (if not exists)
  when: existing_host_id == ''
  uri:
    url: "{{ zabbix_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zbx_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "host.create"
      params:
        host: "{{ host_name }}"
        name: "{{ visible_name }}"
        interfaces:
          - type: 1
            main: 1
            useip: 1
            ip: "{{ host_ip }}"
            dns: ""
            port: "10050"
        groups: "{{ group_ids | map('community.general.dict_kv', 'groupid') | list }}"
        templates: "{{ template_ids | map('community.general.dict_kv', 'templateid') | list }}"
        macros: "{{ zabbix_macro_list }}"
      id: 6
    validate_certs: false
  register: host_create

- name: Update existing host (if already exists)
  when: existing_host_id != ''
  uri:
    url: "{{ zabbix_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zbx_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "host.update"
      params:
        hostid: "{{ existing_host_id }}"
        name: "{{ visible_name }}"
        groups: "{{ group_ids | map('community.general.dict_kv', 'groupid') | list }}"
        templates: "{{ template_ids | map('community.general.dict_kv', 'templateid') | list }}"
        macros: "{{ zabbix_macro_list }}"
      id: 7
    validate_certs: false
  register: host_update

- name: Debug host operation result
  debug:
    msg: >-
      {% if existing_host_id == '' %}
        Host created successfully → {{ host_create.json }}
      {% else %}
        Host updated successfully → {{ host_update.json }}
      {% endif %}

      